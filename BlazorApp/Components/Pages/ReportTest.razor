@page "/ReportTest"
@rendermode InteractiveServer

<PageTitle>Report Test</PageTitle>

<h1>My Table</h1>

@if (reportHtml == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @reportHtml
}


@code {
    private WeatherForecast[]? forecasts;

    private MarkupString? reportHtml;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
            {
                Date = startDate.AddDays(index),
                TemperatureC = Random.Shared.Next(-20, 55),
                Summary = summaries[Random.Shared.Next(summaries.Length)]
            }).ToArray();

        StringBuilder report = new StringBuilder();
        report.Append("<table class='table'>");
        report.Append(" <thead>");
        report.Append("     <tr>");
        report.Append("         <th>Date</th>");
        report.Append("         <th>Temp. (C)</th>");
        report.Append("         <th>Temp. (F)</th>");
        report.Append("         <th>Summary</th>");
        report.Append("     </tr>");
        report.Append(" </thead>");
        report.Append(" <tbody>");
        foreach (var forecast in forecasts)
        {
            report.Append("<tr>");
            report.Append($"<td>{forecast.Date.ToShortDateString()}</td>");
            report.Append($"<td>{forecast.TemperatureC}</td>");
            report.Append($"<td>{forecast.TemperatureF}</td>");
            report.Append($"<td>{forecast.Summary}</td>");
            report.Append("</tr>");
        }       
        report.Append(" </tbody>");
        report.Append("</table>");

        reportHtml = new MarkupString(report.ToString());
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
