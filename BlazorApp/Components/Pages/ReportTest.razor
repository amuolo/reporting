@page "/ReportTest"
@rendermode InteractiveServer

@using DataModel
@using Enterprise.Reporting

<PageTitle>Report Test</PageTitle>

<h1>My Table</h1>

@if (Report is null)
{
    <p><em>Loading...</em></p>
}
else
{
    @Report.GetFragment(this)
}


@code {
    Report<TransactionalData>? Report { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        
        /*RenderFragment a = builder => { };
        a +=@<table class='table'> 
                    <thead>
                    <tr>
                        <th @onclick='UpdateReport'>Date</th>
                        <th>Temp. (C)</th>
                        <th>Temp. (F)</th>
                        <th>Summary</th>
                    </tr>
                    </thead>
                    <tbody>
                        @foreach (var i in Enumerable.Range(0,4))
                        {
                            <tr>
                            <td>@i</td>
                            <td>@i</td>
                            <td>@i</td>
                            <td>@i</td>
                            </tr>
                        }
                    </tbody>
                  </table>;*/

        var data = TemplateTransactionalData.GetTransactionalData();
        Report = Reporting.Create(data).InitiateReport(() => InvokeAsync(StateHasChanged));
    }
}
